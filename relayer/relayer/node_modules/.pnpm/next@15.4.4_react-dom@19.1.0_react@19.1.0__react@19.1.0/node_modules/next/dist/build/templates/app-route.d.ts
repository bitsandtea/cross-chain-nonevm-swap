import { AppRouteRouteModule } from '.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/route-modules/app-route/module.compiled';
import type { IncomingMessage, ServerResponse } from 'node:http';
declare const routeModule: AppRouteRouteModule;
declare const workAsyncStorage: import(".pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/app-render/work-async-storage.external").WorkAsyncStorage, workUnitAsyncStorage: import(".pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/app-render/work-unit-async-storage.external").WorkUnitAsyncStorage, serverHooks: typeof import(".pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/client/components/hooks-server-context");
declare function patchFetch(): void;
export { patchFetch, routeModule, serverHooks, workAsyncStorage, workUnitAsyncStorage };
export declare function handler(req: IncomingMessage, res: ServerResponse, ctx: {
    waitUntil: (prom: Promise<void>) => void;
}): Promise<null | undefined>;
