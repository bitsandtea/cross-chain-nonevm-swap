import type { Metadata, ResolvedMetadata } from '.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/lib/metadata/types/metadata-interface';
export type FieldResolver<Key extends keyof Data & keyof ResolvedData, Data = Metadata, ResolvedData = ResolvedMetadata> = (T: Data[Key]) => ResolvedData[Key];
export type FieldResolverExtraArgs<Key extends keyof Data & keyof ResolvedData, ExtraArgs extends unknown[] = any[], Data = Metadata, ResolvedData = ResolvedMetadata> = (T: Data[Key], ...args: ExtraArgs) => ResolvedData[Key];
export type AsyncFieldResolverExtraArgs<Key extends keyof Data & keyof ResolvedData, ExtraArgs extends unknown[] = any[], Data = Metadata, ResolvedData = ResolvedMetadata> = (T: Data[Key], ...args: ExtraArgs) => Promise<ResolvedData[Key]>;
export type MetadataContext = {
    trailingSlash: boolean;
    isStaticMetadataRouteFile: boolean;
};
