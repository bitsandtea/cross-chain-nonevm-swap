import type { LoaderTree } from '.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/lib/app-dir-module';
import { AppPageRouteModule } from '.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/route-modules/app-page/module.compiled';
import type { IncomingMessage, ServerResponse } from 'node:http';
import GlobalError from 'VAR_MODULE_GLOBAL_ERROR';
/**
 * The tree created in next-app-loader that holds component segments and modules
 * and I've updated it.
 */
declare const tree: LoaderTree;
declare const pages: any;
export { pages, tree };
export { GlobalError };
export declare const __next_app__: {
    require: (id: string | number) => unknown;
    loadChunk: (id: string | number) => Promise<unknown>;
};
export * from '.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/app-render/entry-base';
export declare const routeModule: AppPageRouteModule;
export declare function handler(req: IncomingMessage, res: ServerResponse, ctx: {
    waitUntil: (prom: Promise<void>) => void;
}): Promise<void | null>;
