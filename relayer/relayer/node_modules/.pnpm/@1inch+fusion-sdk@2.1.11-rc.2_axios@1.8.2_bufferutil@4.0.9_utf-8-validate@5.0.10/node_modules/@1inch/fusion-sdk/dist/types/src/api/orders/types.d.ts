import { PaginationParams } from '.pnpm/@1inch+fusion-sdk@2.1.11-rc.2_axios@1.8.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@1inch/fusion-sdk/dist/types/src/api/pagination';
import { AuctionPoint } from '.pnpm/@1inch+fusion-sdk@2.1.11-rc.2_axios@1.8.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@1inch/fusion-sdk/dist/types/src/api/quoter';
import { PaginationOutput } from '.pnpm/@1inch+fusion-sdk@2.1.11-rc.2_axios@1.8.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@1inch/fusion-sdk/dist/types/src/api/types';
import { NetworkEnum } from '.pnpm/@1inch+fusion-sdk@2.1.11-rc.2_axios@1.8.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@1inch/fusion-sdk/dist/types/src/constants';
import { LimitOrderV4Struct } from '@1inch/limit-order-sdk';
export type OrdersApiConfig = {
    network: NetworkEnum;
    url: string;
    authKey?: string;
};
export type ActiveOrdersRequestParams = PaginationParams;
export type ActiveOrder = {
    quoteId: string;
    orderHash: string;
    signature: string;
    deadline: string;
    auctionStartDate: string;
    auctionEndDate: string;
    remainingMakerAmount: string;
    order: LimitOrderV4Struct;
    extension: string;
};
export type ActiveOrdersResponse = PaginationOutput<ActiveOrder>;
export type OrderStatusParams = {
    orderHash: string;
};
export declare enum OrderStatus {
    Pending = "pending",
    Filled = "filled",
    FalsePredicate = "false-predicate",
    NotEnoughBalanceOrAllowance = "not-enough-balance-or-allowance",
    Expired = "expired",
    PartiallyFilled = "partially-filled",
    WrongPermit = "wrong-permit",
    Cancelled = "cancelled",
    InvalidSignature = "invalid-signature"
}
export type Fill = {
    txHash: string;
    filledMakerAmount: string;
    filledAuctionTakerAmount: string;
};
export type OrderStatusResponse = {
    status: OrderStatus;
    order: LimitOrderV4Struct;
    extension: string;
    points: AuctionPoint[] | null;
    cancelTx: string | null;
    fills: Fill[];
    createdAt: string;
    auctionStartDate: number;
    auctionDuration: number;
    initialRateBump: number;
    isNativeCurrency: boolean;
    fromTokenToUsdPrice: string;
    toTokenToUsdPrice: string;
};
export type OrdersByMakerParams = {
    address: string;
} & PaginationParams;
export type OrderFillsByMakerOutput = {
    orderHash: string;
    status: OrderStatus;
    makerAsset: string;
    makerAmount: string;
    minTakerAmount: string;
    takerAsset: string;
    cancelTx: string | null;
    fills: Fill[];
    points: AuctionPoint[] | null;
    auctionStartDate: number;
    auctionDuration: number;
    initialRateBump: number;
    isNativeCurrency: boolean;
    createdAt: string;
};
export type OrdersByMakerResponse = PaginationOutput<OrderFillsByMakerOutput>;
