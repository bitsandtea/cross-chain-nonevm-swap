import { NetworkEnum } from '.pnpm/@1inch+fusion-sdk@2.1.11-rc.2_axios@1.8.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@1inch/fusion-sdk/dist/types/src/constants';
export type QuoterRequestParams = {
    fromTokenAddress: string;
    toTokenAddress: string;
    amount: string;
    walletAddress: string;
    enableEstimate?: boolean;
    permit?: string;
    fee?: number;
    source?: string;
    isPermit2?: boolean;
};
export type QuoterCustomPresetRequestParams = {
    customPreset: CustomPreset;
};
export type QuoterApiConfig = {
    network: NetworkEnum;
    url: string;
    authKey?: string;
};
export type QuoterResponse = {
    fromTokenAmount: string;
    feeToken: string;
    presets: QuoterPresets;
    recommended_preset: PresetEnum;
    toTokenAmount: string;
    prices: Cost;
    volume: Cost;
    settlementAddress: string;
    whitelist: string[];
    quoteId: string | null;
    autoK: number;
};
export type QuoterPresets = {
    fast: PresetData;
    medium: PresetData;
    slow: PresetData;
    custom?: PresetData;
};
export type PresetData = {
    auctionDuration: number;
    startAuctionIn: number;
    bankFee: string;
    initialRateBump: number;
    auctionStartAmount: string;
    auctionEndAmount: string;
    tokenFee: string;
    points: AuctionPoint[];
    allowPartialFills: boolean;
    allowMultipleFills: boolean;
    gasCost: {
        gasBumpEstimate: number;
        gasPriceEstimate: string;
    };
    exclusiveResolver: string | null;
};
export type AuctionPoint = {
    delay: number;
    coefficient: number;
};
export type Cost = {
    usd: {
        fromToken: string;
        toToken: string;
    };
};
export declare enum PresetEnum {
    fast = "fast",
    medium = "medium",
    slow = "slow",
    custom = "custom"
}
export type CustomPreset = {
    auctionDuration: number;
    auctionStartAmount: string;
    auctionEndAmount: string;
    points?: CustomPresetPoint[];
};
export type CustomPresetPoint = {
    toTokenAmount: string;
    delay: number;
};
